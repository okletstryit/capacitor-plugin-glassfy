{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  GlassfyPlugin,\n  GlassfyVersion,\n  GlassfyOfferings,\n  GlassfySku,\n  GlassfyPermissions,\n  GLASSFY_ATTRIBUTION,\n  GlassfyAttributionItem,\n  GLASSFY_LOGLEVEL,\n  GlassfyTransaction,\n  GlassfySkuBase,\n  GLASSFY_STORE,\n  GlassfyUserProperties,\n  GlassfyPurchasesHistory,\n  GLASSFY_REPLACEMENT_MODE,\n  GlassfyStoresInfo,\n} from './definitions';\n\nexport class GlassfyWeb extends WebPlugin implements GlassfyPlugin {\n  async sdkVersion(): Promise<GlassfyVersion> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async initialize(options: {\n    apiKey: string;\n    watcherMode: boolean;\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async setLogLevel(options: { logLevel: GLASSFY_LOGLEVEL }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async offerings(): Promise<GlassfyOfferings> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async purchaseHistory(): Promise<GlassfyPurchasesHistory> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async permissions(): Promise<GlassfyPermissions> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async skuWithId(options: { identifier: string }): Promise<GlassfySku> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async skuWithIdAndStore(options: {\n    identifier: string;\n    store: GLASSFY_STORE;\n  }): Promise<GlassfySkuBase> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  connectCustomSubscriber(options: {\n    subscriberId: string;\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  connectPaddleLicenseKey(options: {\n    licenseKey: string;\n    force: boolean;\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  connectGlassfyUniversalCode(options: {\n    universalCode: string;\n    force: boolean;\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  setEmailUserProperty(options: { email: string }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async setDeviceToken(options: { token: string }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async setExtraUserProperty(options: {\n    extra: { [key: string]: any };\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async getUserProperty(): Promise<GlassfyUserProperties> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async purchaseSku(options: {\n    sku: GlassfySku;\n    skuToUpgrade?: GlassfySku;\n    replacementMode?: GLASSFY_REPLACEMENT_MODE;\n  }): Promise<GlassfyTransaction> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async restorePurchases(): Promise<GlassfyPermissions> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async storeInfo(): Promise<GlassfyStoresInfo> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async setAttribution(options: {\n    type: GLASSFY_ATTRIBUTION;\n    value: string;\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async setAttributions(options: {\n    items: GlassfyAttributionItem[];\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async _paywall(options: {\n    remoteConfig: string;\n    awaitLoading: boolean;\n  }): Promise<void> {\n    console.log(options);\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async _closePaywall(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n\n  async _openUrl(): Promise<void> {\n    throw this.unimplemented('Not supported on web.');\n  }\n}\n"]}