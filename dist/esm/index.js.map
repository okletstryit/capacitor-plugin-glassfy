{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-imports */\nimport { registerPlugin } from '@capacitor/core';\n\nimport type { GlassfyPlugin } from './definitions';\nimport { GlassfySku, GlassfyTransaction } from './definitions';\n\nconst Glassfy = registerPlugin<GlassfyPlugin>('Glassfy', {\n  web: () => import('./web').then(m => new m.GlassfyWeb()),\n});\n\nconst paywallEvent = 'paywallEvent';\nclass GlassfyPaywall {\n  private static currentListener: any = null;\n\n  public static async showPaywall(options: {\n    remoteConfig: string;\n    awaitLoading: boolean;\n    listener: PaywallListener | null;\n  }): Promise<void> {\n    GlassfyPaywall.removeAllListeners();\n    GlassfyPaywall.setupListener(options.listener ?? {});\n    await Glassfy._paywall({\n      remoteConfig: options.remoteConfig,\n      awaitLoading: options.awaitLoading,\n    });\n  }\n\n  private static async removeAllListeners() {\n    GlassfyPaywall.currentListener?.remove();\n  }\n\n  private static async setupListener(listener: PaywallListener) {\n    const handler = async (event: any) => {\n      const eventName: string = event.event;\n\n      const close = (\n        transaction: GlassfyTransaction | null,\n        error: any | null,\n      ) => {\n        if (listener.onClose != null) {\n          listener.onClose(transaction, error);\n        }\n        GlassfyPaywall.close();\n      };\n\n      switch (eventName) {\n        case 'onClose':\n          close(event.transaction, event.error);\n          break;\n\n        case 'onLink':\n          if (listener.onLink) {\n            listener.onLink(event.url);\n          } else {\n            await Glassfy._openUrl({ url: event.url });\n          }\n          break;\n\n        case 'onRestore':\n          if (listener.onRestore) {\n            listener.onRestore();\n          } else {\n            try {\n              await Glassfy.restorePurchases();\n              close(null, null);\n            } catch (error) {\n              close(null, error);\n            }\n          }\n          break;\n\n        case 'onPurchase':\n          if (listener.onPurchase) {\n            listener.onPurchase(event.sku);\n          } else {\n            try {\n              const transaction = await Glassfy.purchaseSku({ sku: event.sku });\n              close(transaction, null);\n            } catch (error) {\n              close(null, error);\n            }\n            GlassfyPaywall.removeAllListeners();\n            GlassfyPaywall.close();\n          }\n          break;\n\n        default:\n          break;\n      }\n    };\n    GlassfyPaywall.currentListener = (Glassfy as any).addListener(\n      paywallEvent,\n      handler,\n    );\n  }\n\n  public static async close(): Promise<void> {\n    (Glassfy as any).removeAllListeners(paywallEvent);\n    await Glassfy._closePaywall();\n  }\n}\n\ninterface PaywallListener {\n  onClose?(transaction: GlassfyTransaction | null, error: any | null): void;\n  onLink?(url: URL): void;\n  onRestore?(): void;\n  onPurchase?(sku: GlassfySku): void;\n}\n\nexport * from './definitions';\nexport { Glassfy, GlassfyPaywall, PaywallListener };\n"]}