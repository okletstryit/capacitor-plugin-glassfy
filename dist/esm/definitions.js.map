{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC7B,qEAAY,CAAA;IACZ,8EAAiB,CAAA;IACjB,mEAAW,CAAA;AACb,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB,QAI9B;AAED,MAAM,CAAN,IAAY,kBAcX;AAdD,WAAY,kBAAkB;IAC5B,0EAAiB,CAAA;IACjB,wEAAgB,CAAA;IAChB,oEAAc,CAAA;IACd,oEAAc,CAAA;IACd,kGAA6B,CAAA;IAC7B,kGAA6B,CAAA;IAC7B,gFAAoB,CAAA;IACpB,gFAAoB,CAAA;IACpB,kEAAa,CAAA;IACb,kEAAa,CAAA;IACb,oEAAc,CAAA;IACd,kFAAqB,CAAA;IACrB,wFAAwB,CAAA;AAC1B,CAAC,EAdW,kBAAkB,KAAlB,kBAAkB,QAc7B;AAED,MAAM,CAAN,IAAY,aAMX;AAND,WAAY,aAAa;IACvB,yDAAY,CAAA;IACZ,2DAAa,CAAA;IACb,qDAAU,CAAA;IACV,qDAAU,CAAA;IACV,uDAAW,CAAA;AACb,CAAC,EANW,aAAa,KAAb,aAAa,QAMxB;AAED,MAAM,CAAN,IAAY,gBAMX;AAND,WAAY,gBAAgB;IAC1B,qDAAO,CAAA;IACP,yDAAS,CAAA;IACT,yDAAS,CAAA;IACT,uDAAQ,CAAA;IACR,qDAAO,CAAA;AACT,CAAC,EANW,gBAAgB,KAAhB,gBAAgB,QAM3B;AAED,MAAM,CAAN,IAAY,mBASX;AATD,WAAY,mBAAmB;IAC7B,qEAAY,CAAA;IACZ,2EAAe,CAAA;IACf,yDAAM,CAAA;IACN,6DAAQ,CAAA;IACR,6DAAQ,CAAA;IACR,6DAAQ,CAAA;IACR,6DAAQ,CAAA;IACR,2DAAO,CAAA;AACT,CAAC,EATW,mBAAmB,KAAnB,mBAAmB,QAS9B;AAED,MAAM,CAAN,IAAY,wBAOX;AAPD,WAAY,wBAAwB;IAClC,+GAA4B,CAAA;IAC5B,qGAAuB,CAAA;IACvB,yGAAyB,CAAA;IACzB,iGAAqB,CAAA;IACrB,iGAAqB,CAAA;IACrB,+EAAY,CAAA;AACd,CAAC,EAPW,wBAAwB,KAAxB,wBAAwB,QAOnC;AAED,MAAM,CAAN,IAAY,mBA+BX;AA/BD,WAAY,mBAAmB;IAC7B,sEAAa,CAAA;IACb,uDAAuD;IACvD,4EAAgB,CAAA;IAChB,wEAAwE;IACxE,4EAAgB,CAAA;IAChB,sEAAsE;IACtE,sEAAa,CAAA;IACb,yDAAyD;IACzD,sFAAqB,CAAA;IACrB,sCAAsC;IACtC,4FAAwB,CAAA;IACxB,kDAAkD;IAClD,8FAAyB,CAAA;IACzB,uDAAuD;IACvD,0FAAuB,CAAA;IACvB,iFAAiF;IACjF,gFAAgF;IAChF,oEAAY,CAAA;IACZ,iEAAiE;IACjE,2EAAe,CAAA;IACf,mDAAmD;IACnD,iFAAkB,CAAA;IAClB,oDAAoD;IACpD,2EAAe,CAAA;IACf,mDAAmD;IACnD,2EAAe,CAAA;IACf,oDAAoD;IACpD,6EAAgB,CAAA;IAChB,mDAAmD;IACnD,2EAAe,CAAA;AACjB,CAAC,EA/BW,mBAAmB,KAAnB,mBAAmB,QA+B9B","sourcesContent":["export enum GLASSFY_ELEGIBILITY {\n  ELEGIBLE = 1,\n  NON_ELEGIBLE = -1,\n  UNKNOWN = 0,\n}\n\nexport enum GLASSFY_EVENT_TYPE {\n  InitialBuy = 5001,\n  Restarted = 5002,\n  Renewed = 5003,\n  Expired = 5004,\n  DidChangeRenewalStatus = 5005,\n  IsInBillingRetryPeriod = 5006,\n  ProductChange = 5007,\n  InAppPurchase = 5008,\n  Refund = 5009,\n  Paused = 5010,\n  Resumed = 5011,\n  ConnectLicense = 5012,\n  DisconnectLicense = 5013,\n}\n\nexport enum GLASSFY_STORE {\n  AppStore = 1,\n  PlayStore = 2,\n  Paddle = 3,\n  Stripe = 4,\n  Glassfy = 5,\n}\n\nexport enum GLASSFY_LOGLEVEL {\n  OFF = 0,\n  ERROR = 1,\n  DEBUG = 2,\n  INFO = 3,\n  ALL = 3,\n}\n\nexport enum GLASSFY_ATTRIBUTION {\n  AdjustID = 1,\n  AppsFlyerID = 2,\n  IP = 3,\n  IDFA = 4,\n  IDFV = 5,\n  GAID = 6,\n  ASID = 7,\n  AID = 8,\n}\n\nexport enum GLASSFY_REPLACEMENT_MODE {\n  UNKNOWN_REPLACEMENT_MODE = 0,\n  WITH_TIME_PRORATION = 1,\n  CHARGE_PRORATED_PRICE = 2,\n  WITHOUT_PRORATION = 3,\n  CHARGE_FULL_PRICE = 5,\n  DEFERRED = 6,\n}\n\nexport enum GLASSFY_ENTITLEMENT {\n  NEVERBUY = -9,\n  // The customer received a refund for the subscription.\n  OTHERREFUND = -8,\n  // The customer received a refund due to a perceived issue with the app.\n  ISSUEREFUND = -7,\n  // The system canceled the subscription because the customer upgraded.\n  UPGRADED = -6,\n  // The customer intentionally cancelled the subscription.\n  EXPIREDVOLUNTARY = -5,\n  // The product is no longer available.\n  PRODUCTNOTAVAILABLE = -4,\n  // The customer did not accept the price increase.\n  FAILTOACCEPTINCREASE = -3,\n  // The receipt is fully expired due to a billing issue.\n  EXPIREDFROMBILLING = -2,\n  // The receipt is expired but the subscription is still in a billing-retry state.\n  // If grace period is enabled this state excludes subscriptions in grace period.\n  INRETRY = -1,\n  // The receipt is out of date or there is another purchase issue.\n  MISSINGINFO = 0,\n  // The subscription expired but is in grace period.\n  EXPIREDINGRACE = 1,\n  // The subscription is an off-platform subscription.\n  OFFPLATFORM = 2,\n  // The subscription is a non-renewing subscription.\n  NONRENEWING = 3,\n  // The subscription is active and auto-renew is off.\n  AUTORENEWOFF = 4,\n  // The subscription is active and auto-renew is on.\n  AUTORENEWON = 5,\n}\n\nexport interface GlassfyVersion {\n  readonly version: string;\n}\n\nexport interface GlassfyProductDiscount {\n  readonly identifier: string;\n  readonly price: number;\n  readonly currencyCode: string;\n  readonly period: string;\n  readonly numberOfPeriods: number;\n  readonly type: string;\n}\n\nexport interface GlassfyProduct {\n  readonly title: string;\n  readonly identifier: string;\n  readonly description: string;\n  readonly price: number;\n  readonly currencyCode: string;\n  readonly period: string;\n  readonly introductoryPrice: GlassfyProductDiscount;\n  readonly discounts: GlassfyProductDiscount[];\n  readonly basePlanId: string;\n}\n\nexport interface GlassfySkuBase {\n  readonly skuId: string;\n  readonly productId: string;\n  readonly store: GLASSFY_STORE;\n}\n\nexport interface GlassfySku extends GlassfySkuBase {\n  readonly introductoryEligibility: GLASSFY_ELEGIBILITY;\n  readonly promotionalEligibility: GLASSFY_ELEGIBILITY;\n  readonly extravars: { [key: string]: string };\n  readonly product: GlassfyProduct;\n  readonly basePlanId: string;\n  readonly offerId: string;\n  readonly discount: GlassfyProductDiscount;\n}\n\nexport interface GlassfySkuPaddle extends GlassfySkuBase {\n  readonly name: string;\n  readonly initialPrice: number;\n  readonly initialPriceCode: string;\n  readonly recurringPrice: number;\n  readonly recurringPriceCode: string;\n  readonly extravars: { [key: string]: string };\n}\n\nexport interface GlassfyAccountableSku extends GlassfySkuBase {\n  readonly isInIntroOfferPeriod: boolean;\n  readonly isInTrialPeriod: boolean;\n  readonly basePlanId: string;\n  readonly offerId: string;\n}\n\nexport interface GlassfyOffering {\n  readonly offeringId: string;\n  readonly skus: GlassfySku[];\n}\n\nexport interface GlassfyOfferings {\n  readonly all: GlassfyOffering[];\n}\n\nexport interface GlassfyPurchasesHistory {\n  readonly all: GlassfyPurchaseHistory[];\n}\n\nexport interface GlassfyPurchaseHistory {\n  readonly productId: string;\n  readonly skuId: string;\n  readonly type: GLASSFY_EVENT_TYPE;\n  readonly store: GLASSFY_STORE;\n  readonly purchaseDate: string;\n  readonly expireDate: string;\n  readonly transactionId: string;\n  readonly subscriberId: string;\n  readonly currencyCode: string;\n  readonly countryCode: string;\n  readonly isInIntroOfferPeriod: boolean;\n  readonly promotionalOfferId: string;\n  readonly offerCodeRefName: string;\n  readonly licenseCode: string;\n  readonly webOrderLineItemId: string;\n}\n\nexport interface GlassfyPermission {\n  readonly permissionId: string;\n  readonly entitlement: GLASSFY_ENTITLEMENT;\n  readonly isValid: boolean;\n  readonly expireDate: string;\n  readonly accountableSkus: GlassfyAccountableSku[];\n}\n\nexport interface GlassfyPermissions {\n  readonly installationId: string;\n  readonly subscriberId: string;\n  readonly originalApplicationVersion: string;\n  readonly originalApplicationDate: string;\n  readonly all: GlassfyPermission[];\n}\n\nexport interface GlassfyPaddleStoreInfo {\n  readonly store: GLASSFY_STORE.Paddle;\n  readonly extravars: { [key: string]: string };\n  readonly userid: string;\n  readonly planId: string;\n  readonly subscriptionId: string;\n  readonly updateURL: string;\n  readonly cancelURL: string;\n}\n\nexport interface GlassfyStoreInfo {\n  readonly store: Exclude<GLASSFY_STORE, GLASSFY_STORE.Paddle>;\n  readonly extravars: { [key: string]: string };\n}\n\nexport interface GlassfyStoresInfo {\n  readonly all: (GlassfyStoreInfo | GlassfyPaddleStoreInfo)[];\n}\n\nexport interface GlassfyTransaction {\n  readonly productId: string;\n  readonly receiptValidated: boolean;\n  readonly permissions: GlassfyPermissions;\n}\n\nexport interface GlassfyUserProperties {\n  readonly email: string;\n  readonly token: boolean;\n  readonly extra: GlassfyExtraProperty;\n}\n\nexport interface GlassfyAttributionItem {\n  readonly type: GLASSFY_ATTRIBUTION;\n  readonly value: string;\n}\n\nexport type GlassfyExtraProperty = { [key: string]: string };\n\nexport interface GlassfyPlugin {\n  sdkVersion(): Promise<GlassfyVersion>;\n\n  /**\n   *  For more details, follow instruction at https://docs.glassfy.io/get-started/configuration\n   */\n  initialize(options: { apiKey: string; watcherMode: boolean }): Promise<void>;\n\n  setLogLevel(options: { logLevel: GLASSFY_LOGLEVEL }): Promise<void>;\n\n  /**\n   *  For more details, check the documentation https://docs.glassfy.io/dashboard/configure-offerings\n   */\n  offerings(): Promise<GlassfyOfferings>;\n\n  /**\n   * For more details, check the documentation https://docs.glassfy.io/dashboard/configure-offerings\n   */\n  purchaseHistory(): Promise<GlassfyPurchasesHistory>;\n\n  /**\n   * For more details, check the documentation https://docs.glassfy.io/dashboard/configure-permissions.html\n   */\n  permissions(): Promise<GlassfyPermissions>;\n\n  /**\n   * For more details, check the documentation https://docs.glassfy.io/dashboard/configure-products\n   */\n  skuWithId(options: { identifier: string }): Promise<GlassfySku>;\n\n  skuWithIdAndStore(options: {\n    identifier: string;\n    store: GLASSFY_STORE;\n  }): Promise<GlassfySkuBase>;\n\n  connectCustomSubscriber(options: {\n    subscriberId: string;\n  }): Promise<void>;\n\n  connectPaddleLicenseKey(options: {\n    licenseKey: string;\n    force: boolean;\n  }): Promise<void>;\n\n  connectGlassfyUniversalCode(options: {\n    universalCode: string;\n    force: boolean;\n  }): Promise<void>;\n\n  setEmailUserProperty(options: { email: string }): Promise<void>;\n\n  setDeviceToken(options: { token: string }): Promise<void>;\n\n  setExtraUserProperty(options: { extra: GlassfyExtraProperty }): Promise<void>;\n\n  getUserProperty(): Promise<GlassfyUserProperties>;\n\n  purchaseSku(options: {\n    sku: GlassfySku;\n    skuToUpgrade?: GlassfySku;\n    replacementMode?: GLASSFY_REPLACEMENT_MODE;\n  }): Promise<GlassfyTransaction>;\n\n  restorePurchases(): Promise<GlassfyPermissions>;\n\n  storeInfo(): Promise<GlassfyStoresInfo>;\n\n  setAttribution(options: {\n    type: GLASSFY_ATTRIBUTION;\n    value: string;\n  }): Promise<void>;\n\n  setAttributions(options: { items: GlassfyAttributionItem[] }): Promise<void>;\n\n  _paywall(options: {\n    remoteConfig: string;\n    awaitLoading: boolean;\n  }): Promise<void>;\n\n  _closePaywall(): Promise<void>;\n\n  _openUrl(options: { url: string }): Promise<void>;\n}\n"]}